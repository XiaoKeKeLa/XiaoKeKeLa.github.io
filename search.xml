<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>随机快排</title>
      <link href="2020/10/21/%E9%9A%8F%E6%9C%BA%E5%BF%AB%E6%8E%92/"/>
      <url>2020/10/21/%E9%9A%8F%E6%9C%BA%E5%BF%AB%E6%8E%92/</url>
      
        <content type="html"><![CDATA[<p>快排在选取主元的时候，每次都选取最右边的元素。当序列为有序时，会发现划分出来的两个子序列一个里面没有元素，而另一个则只比原来少一个元素。为了避免这种情况，引入一个随机化量来破坏这种有序状态。</p><p>在随机化的快排里面，选取a[left..right]中的随机一个元素作为主元，然后再进行划分，就可以得到一个平衡的划分。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> random(x) rand()%(x)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">t=a[n];</span><br><span class="line">a[n]=a[m];</span><br><span class="line">a[m]=t;</span><br><span class="line"> &#125; </span><br><span class="line"> <span class="function"><span class="keyword">int</span> * <span class="title">partition</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> L,<span class="keyword">int</span> R)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> less=L<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">int</span> more=R;</span><br><span class="line"><span class="keyword">while</span>(L&lt;more)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[L]&lt;a[R])</span><br><span class="line">swap(a,++less,L++);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a[L]&gt;a[R])</span><br><span class="line">swap(a,L,--more);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a[L]==a[R]) </span><br><span class="line">&#123; </span><br><span class="line">L++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">swap(a,more,R);</span><br><span class="line"><span class="keyword">int</span> p[<span class="number">2</span>]=&#123;less+<span class="number">1</span>,more&#125;;</span><br><span class="line"><span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quicksort</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> L,<span class="keyword">int</span> R)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L&lt;R)</span><br><span class="line">&#123;</span><br><span class="line">swap(a,random(R-L+<span class="number">1</span>),R);<span class="comment">//与经典快排不同，随机在数组中选择一个数字进行比较 </span></span><br><span class="line"><span class="keyword">int</span> *p=partition(a,L,R);</span><br><span class="line">quicksort(a,L,p[<span class="number">0</span>]<span class="number">-1</span>);</span><br><span class="line">quicksort(a,p[<span class="number">1</span>]+<span class="number">1</span>,R);</span><br><span class="line">&#125;</span><br><span class="line"> &#125; </span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line"> <span class="keyword">int</span> n;</span><br><span class="line"> <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"> <span class="keyword">int</span> a[n];</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line"> &#123;</span><br><span class="line"> <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line"> &#125;</span><br><span class="line"> quicksort(a,<span class="number">0</span>,n);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>多次实验结果：</p><h4 id="10w："><a href="#10w：" class="headerlink" title="10w："></a><strong>10w：</strong></h4><table><thead><tr><th>算法</th><th>第1次耗时</th><th>第2次耗时</th><th>第3次耗时</th><th>平均耗时</th></tr></thead><tbody><tr><td>普通快排</td><td>13ms</td><td>15ms</td><td>15ms</td><td>14.333ms</td></tr><tr><td>随机化版本快排</td><td>25ms</td><td>25ms</td><td>27ms</td><td>25.667ms</td></tr></tbody></table><h4 id="100w："><a href="#100w：" class="headerlink" title="100w："></a><strong>100w：</strong></h4><table><thead><tr><th>算法</th><th>第1次耗时</th><th>第2次耗时</th><th>第3次耗时</th><th>平均耗时</th></tr></thead><tbody><tr><td>普通快排</td><td>101ms</td><td>103ms</td><td>96ms</td><td>100ms</td></tr><tr><td>随机化版本快排</td><td>119ms</td><td>101ms</td><td>105ms</td><td>108.333ms</td></tr></tbody></table><h4 id="1000w："><a href="#1000w：" class="headerlink" title="1000w："></a><strong>1000w：</strong></h4><table><thead><tr><th>算法</th><th>第1次耗时</th><th>第2次耗时</th><th>第3次耗时</th><th>平均耗时</th></tr></thead><tbody><tr><td>普通快排</td><td>1397ms</td><td>1379ms</td><td>1338ms</td><td>1371.333ms</td></tr><tr><td>随机化版本快排</td><td>1241ms</td><td>1187ms</td><td>1258ms</td><td>1228.667ms</td></tr></tbody></table><p>随机化快排因为要生成随机数，所以有一些性能损失，所以数据规模较小，数据分布均匀时普通快排还是比随机化快排要快些的，不过随着数据规模的上升，随机化快排的性能优势就展现出来了。</p><h4 id="有序序列"><a href="#有序序列" class="headerlink" title="有序序列"></a><strong>有序序列</strong></h4><p>下来才是展示快排才华的时候，假设当输入数组已经是排好序的，这两个算法的性能差距又有多少？<br>之前的数组生成代码不变，只是在调用两个算法之前，先调用一下快排将数组排序，然后将两个有序的数组作为参数传进去。</p><h4 id="10w：-1"><a href="#10w：-1" class="headerlink" title="10w："></a><strong>10w：</strong></h4><p>10w的普通快排……已经栈溢出了。</p><table><thead><tr><th>算法</th><th>第1次耗时</th><th>第2次耗时</th><th>第3次耗时</th><th>平均耗时</th></tr></thead><tbody><tr><td>普通快排</td><td>溢出</td><td>溢出</td><td>溢出</td><td>溢出</td></tr><tr><td>随机化版本快排</td><td>15ms</td><td>7ms</td><td>6ms</td><td>9.333ms</td></tr></tbody></table><h4 id="1w："><a href="#1w：" class="headerlink" title="1w："></a><strong>1w：</strong></h4><p>试一试1w的</p><table><thead><tr><th>算法</th><th>第1次耗时</th><th>第2次耗时</th><th>第3次耗时</th><th>平均耗时</th></tr></thead><tbody><tr><td>普通快排</td><td>98ms</td><td>94ms</td><td>92ms</td><td>94.667ms</td></tr><tr><td>随机化版本快排</td><td>2ms</td><td>1ms</td><td>0ms</td><td>1ms</td></tr></tbody></table><h4 id="1000w：-1"><a href="#1000w：-1" class="headerlink" title="1000w："></a><strong>1000w：</strong></h4><p>看下1000w下随机化快排是否有影响</p><table><thead><tr><th>算法</th><th>第1次耗时</th><th>第2次耗时</th><th>第3次耗时</th><th>平均耗时</th></tr></thead><tbody><tr><td>随机化版本快排</td><td>696ms</td><td>733ms</td><td>689ms</td><td>706ms</td></tr></tbody></table><p><em>参考书籍：机械工业出版社 第三版<strong>《算法导论》</strong>部分内容引自原书</em></p><p><img src="/pictures/gzh.jpg" alt="公众号"></p>]]></content>
      
      
      <categories>
          
          <category> 算法刷题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/10/20/hello-world/"/>
      <url>2020/10/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
